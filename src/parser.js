/* state num: 88 */
var parse = function() {
	function $f0($1, $2, $3, $4, $5, $6, $7) {
		var $$; $$ = ['each', $2, $6, $4 && eval($4.text), eval($3.text)];
		return $$;
	}
	function $f1($1) {
		var $$; $$ = ['lit', eval($1.text)]; return $$;
	}
	function $f2($1, $2, $3) {
		var $$; $$ = [$2.text, $1, $3]; return $$;
	}
	var nBegin = 36;
	var tSymbols = ["$", "!", "%", "&&", "(", ")", "*", "+", "-", ".", "/", "<", "<=", "=", ">", ">=", "[", "]", "boolean", "eq", "ne", "number", "realId", "set", "string", "text", "{{", "{{#each", "{{#if", "{{/each}}", "{{/if}}", "{{else}}", "{{{", "||", "}}", "}}}", "AdditiveExpression", "EqualityExpression", "LogicalAndExpression", "LogicalOrExpression", "MemberExpression", "MultiplicativeExpression", "PrimaryExpression", "RelationalExpression", "UnaryExpression", "epsilon", "expr", "id", "program", "statement", "statements"];
	var tSymbolIndex = {};
	for (var i = 0; i < tSymbols.length; ++i)
		tSymbolIndex[tSymbols[i]] = i;
	var tAction = [{ _: -2 }, { _: -32768 }, { 25: 3, 26: 4, 27: 5, 28: 6, 32: 7, _: -1 }, { _: -11 }, { 1: 9, 4: 10, 8: 11, 18: 12, 21: 13, 22: 14, 23: 15, 24: 16, _: 0 }, { 1: 9, 4: 10, 8: 11, 18: 12, 21: 13, 22: 14, 23: 28, 24: 16, _: 0 }, { _: -3 }, { _: -16 }, { _: -15 }, { _: -12 }, { 22: 14, 23: 28, _: -13 }, { _: -14 }, { 7: 36, 8: 37, _: -32 }, { 19: 38, 20: 39, _: -40 }, { 3: 40, _: -42 }, { 33: 41, _: -44 }, { 9: 42, 16: 43, _: -22 }, { 2: 44, 6: 45, 10: 46, _: -29 }, { _: -19 }, { 11: 47, 12: 48, 14: 49, 15: 50, _: -37 }, { _: -25 }, { 34: 51, _: 0 }, { _: -17 }, { _: -13 }, { 24: 52, _: 0 }, { 34: 53, _: 0 }, { 35: 54, _: 0 }, { _: -23 }, { 5: 55, _: 0 }, { _: -24 }, { 13: 56, _: 0 }, { 22: 14, 23: 28, _: 0 }, { _: -9 }, { 24: 72, _: -45 }, { _: -10 }, { _: -18 }, { 2: 44, 6: 45, 10: 46, _: -30 }, { 2: 44, 6: 45, 10: 46, _: -31 }, { 11: 47, 12: 48, 14: 49, 15: 50, _: -38 }, { 11: 47, 12: 48, 14: 49, 15: 50, _: -39 }, { 19: 38, 20: 39, _: -41 }, { 3: 40, _: -43 }, { _: -20 }, { 17: 76, _: 0 }, { _: -28 }, { _: -26 }, { _: -27 }, { 7: 36, 8: 37, _: -33 }, { 7: 36, 8: 37, _: -35 }, { 7: 36, 8: 37, _: -34 }, { 7: 36, 8: 37, _: -36 }, { 34: 77, _: 0 }, { 34: 78, _: 0 }, { 25: 3, 26: 4, 27: 5, 28: 6, 30: 79, 31: 80, 32: 7, _: 0 }, { 34: 81, _: 0 }, { _: -21 }, { _: -4 }, { _: -8 }, { 25: 3, 26: 4, 27: 5, 28: 6, 29: 85, 32: 7, _: 0 }, { 25: 3, 26: 4, 27: 5, 28: 6, 29: 86, 32: 7, _: 0 }, { 25: 3, 26: 4, 27: 5, 28: 6, 30: 87, 32: 7, _: 0 }, { _: -7 }, { _: -6 }, { _: -5 }];
	var actionIndex = [0, 1, 2, 3, 4, 5, 5, 5, 6, 5, 5, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 5, 5, 5, 5, 5, 5, 31, 5, 5, 5, 5, 5, 5, 5, 5, 32, 33, 0, 34, 35, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 0, 56, 0, 57, 58, 59, 60, 61, 62, 63];
	var tGoto = [{ 12: 1, 14: 2 }, , { 13: 8 }, , { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 26, 11: 27 }, { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 29, 11: 27 }, { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 30, 11: 27 }, { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 31, 11: 27 }, , { 4: 21, 6: 23, 8: 32, 11: 27 }, { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 33, 11: 27 }, { 4: 21, 6: 23, 8: 34, 11: 27 }, , , , { 11: 35 }, , , , , , , , , , , , , , , , , , , , , { 4: 21, 5: 57, 6: 23, 8: 25, 11: 27 }, { 4: 21, 5: 58, 6: 23, 8: 25, 11: 27 }, { 0: 17, 4: 21, 5: 22, 6: 23, 7: 59, 8: 25, 11: 27 }, { 0: 17, 4: 21, 5: 22, 6: 23, 7: 60, 8: 25, 11: 27 }, { 0: 17, 1: 61, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 11: 27 }, { 0: 17, 1: 18, 2: 62, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 11: 27 }, { 11: 63 }, { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 64, 11: 27 }, { 4: 21, 6: 23, 8: 65, 11: 27 }, { 4: 21, 6: 23, 8: 66, 11: 27 }, { 4: 21, 6: 23, 8: 67, 11: 27 }, { 0: 68, 4: 21, 5: 22, 6: 23, 8: 25, 11: 27 }, { 0: 69, 4: 21, 5: 22, 6: 23, 8: 25, 11: 27 }, { 0: 70, 4: 21, 5: 22, 6: 23, 8: 25, 11: 27 }, { 0: 71, 4: 21, 5: 22, 6: 23, 8: 25, 11: 27 }, , { 9: 73 }, { 14: 74 }, , , { 0: 17, 1: 18, 2: 19, 3: 20, 4: 21, 5: 22, 6: 23, 7: 24, 8: 25, 10: 75, 11: 27 }, , , , , , , , , , , , , , , , , , { 13: 8 }, , , { 14: 82 }, { 14: 83 }, , { 14: 84 }, , { 13: 8 }, { 13: 8 }, { 13: 8 }];
	var tRules = [[51, 48], [48, 50], [50], [50, 50, 49], [49, 28, 46, 34, 50, 30], [49, 28, 46, 34, 50, 31, 50, 30], [49, 27, 46, 24, 45, 34, 50, 29], [49, 27, 46, 24, 24, 34, 50, 29], [49, 26, 23, 47, 13, 46, 34], [49, 26, 46, 34], [49, 32, 46, 35], [49, 25], [47, 22], [47, 23], [42, 24], [42, 21], [42, 18], [42, 47], [42, 4, 46, 5], [40, 42], [40, 40, 9, 47], [40, 40, 16, 46, 17], [44, 40], [44, 1, 44], [44, 8, 44], [41, 44], [41, 41, 6, 44], [41, 41, 10, 44], [41, 41, 2, 44], [36, 41], [36, 36, 7, 41], [36, 36, 8, 41], [43, 36], [43, 43, 11, 36], [43, 43, 14, 36], [43, 43, 12, 36], [43, 43, 15, 36], [37, 43], [37, 37, 19, 43], [37, 37, 20, 43], [38, 37], [38, 38, 3, 37], [39, 38], [39, 39, 33, 38], [46, 39], [45]];
	var tFuncs = [, function($1) {
		var $$; $$ = ['prog', $1]; return $$;
	}, function() {
		var $$; $$ = []; return $$;
	}, function($1, $2) {
		var $$; $1.push($2); $$ = $1; return $$;
	}, function($1, $2, $3, $4, $5) {
		var $$; $$ = ['if', $2, $4]; return $$;
	}, function($1, $2, $3, $4, $5, $6, $7) {
		var $$; $$ = ['if', $2, $4, $6]; return $$;
	}, $f0, $f0, function($1, $2, $3, $4, $5, $6) {
		var $$; $$ = ['set', $3.text, $5]; return $$;
	}, function($1, $2, $3) {
		var $$; $$ = ['eval', $2, true]; return $$;
	}, function($1, $2, $3) {
		var $$; $$ = ['eval', $2, false]; return $$;
	}, function($1) {
		var $$; $$ = ['text', $1.text]; return $$;
	}, , , $f1, $f1, function($1) {
		var $$; $$ = ['lit', $1.text == 'true']; return $$;
	}, function($1) {
		var $$; $$ = ['id', $1.text]; return $$;
	}, function($1, $2, $3) {
		var $$; $$ = $2; return $$;
	}, , function($1, $2, $3) {
		var $$; $$ = ['.', $1, $3.text]; return $$;
	}, function($1, $2, $3, $4) {
		var $$; $$ = ['[]', $1, $3]; return $$;
	}, , function($1, $2) {
		var $$; $$ = ['!', $2]; return $$;
	}, function($1, $2) {
		var $$; $$ = ['u-', $2]; return $$;
	}, , $f2, $f2, $f2, , $f2, $f2, , $f2, $f2, $f2, $f2, , function($1, $2, $3) {
		var $$; $$ = ['eq', $1, $3]; return $$;
	}, function($1, $2, $3) {
		var $$; $$ = ['ne', $1, $3]; return $$;
	}, , $f2, , $f2];
	function getAction(x, y) {
		var list = tAction[actionIndex[x]];
		return list[y] || list._;
	}
	return function(lexer, others) {
		function getToken() {
			var t = lexer.scan();
			if (t.tag == 'ws') t = lexer.scan();
			return t;
		}

		var s = 0;
		var stateStack = [0];
		var a = getToken();
		var valueStack = [];
		var obj = {
			get: function(i) {
				return valueStack[valueStack.length + i];
			},
			set: function(i, v) {
				valueStack[valueStack.length + i] = v;
			}
		};
		if (others) for (var i in others)
			obj[i] = others[i];

		while (1) {
			var t = getAction(s, tSymbolIndex[a.tag]);
			if (!t) err();
			else if (t > 0) {
				stateStack.push(s = t);
				valueStack.push(a);
				a = getToken();
			}
			else if (t < 0 && t > -32768) {
				var idx = -t;
				var p = tRules[idx];
				var num = p.length - 1;
				stateStack.length -= num;
				s = tGoto[stateStack[stateStack.length - 1]][p[0] - nBegin];
				stateStack.push(s);

				if (tFuncs[idx]) {
					var val = tFuncs[idx].apply(obj, valueStack.splice(valueStack.length - num, num));
					valueStack.push(val);
				}
				else if (num != 1) {
					valueStack.splice(valueStack.length - num, num, null);
				}
			}
			else {
				if (a.tag != tSymbols[0]) err();
				return valueStack[0];
			}
		}
		function err() {
			throw Error("Syntax error: " + lexer.getPos(a.index));
		}
	};
}();
